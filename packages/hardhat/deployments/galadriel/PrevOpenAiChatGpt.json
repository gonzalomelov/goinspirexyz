{
  "address": "0x193d8645aAa7F499351e9Efe066BfdAa72EAa636",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOracleAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "chatId",
          "type": "uint256"
        }
      ],
      "name": "ChatCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOracleAddress",
          "type": "address"
        }
      ],
      "name": "OracleAddressUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "runId",
          "type": "uint256"
        }
      ],
      "name": "addMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "chatRuns",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "messagesCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chatId",
          "type": "uint256"
        }
      ],
      "name": "getMessageHistoryContents",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chatId",
          "type": "uint256"
        }
      ],
      "name": "getMessageHistoryRoles",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "runId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "response",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "errorMessage",
          "type": "string"
        }
      ],
      "name": "onOracleFunctionResponse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "runId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "id",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "content",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "functionName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "functionArguments",
              "type": "string"
            },
            {
              "internalType": "uint64",
              "name": "created",
              "type": "uint64"
            },
            {
              "internalType": "string",
              "name": "model",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "systemFingerprint",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "object",
              "type": "string"
            },
            {
              "internalType": "uint32",
              "name": "completionTokens",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "promptTokens",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "totalTokens",
              "type": "uint32"
            }
          ],
          "internalType": "struct IOracle.OpenAiResponse",
          "name": "response",
          "type": "tuple"
        },
        {
          "internalType": "string",
          "name": "errorMessage",
          "type": "string"
        }
      ],
      "name": "onOracleOpenAiLlmResponse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOracleAddress",
          "type": "address"
        }
      ],
      "name": "setOracleAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "startChat",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8325cf3800bb091b3fce2221e00c69a125df2caec5abdbb98c548564948f864c",
  "receipt": {
    "to": "0x0000000000000000000000000000000000000000",
    "from": "0x372082138ea420eBe56078D73F0359D686A7E981",
    "contractAddress": "0x193d8645aAa7F499351e9Efe066BfdAa72EAa636",
    "transactionIndex": 0,
    "gasUsed": "2362673",
    "logsBloom": "0x
    "blockHash": "0x008dfac98fa6fd403ee0d0225c72467b87d75cf2b1e4c3bbea2df0f6011d605e",
    "transactionHash": "0x8325cf3800bb091b3fce2221e00c69a125df2caec5abdbb98c548564948f864c",
    "logs": [],
    "blockNumber": 35156235,
    "cumulativeGasUsed": "0",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0352b37E5680E324E804B5A6e1AddF0A064E201D"
  ],
  "numDeployments": 1,
  "solcInputHash": "20f4834a29043028ac424b3582e55c8c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOracleAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chatId\",\"type\":\"uint256\"}],\"name\":\"ChatCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOracleAddress\",\"type\":\"address\"}],\"name\":\"OracleAddressUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"runId\",\"type\":\"uint256\"}],\"name\":\"addMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"chatRuns\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"messagesCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chatId\",\"type\":\"uint256\"}],\"name\":\"getMessageHistoryContents\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chatId\",\"type\":\"uint256\"}],\"name\":\"getMessageHistoryRoles\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"runId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"response\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"}],\"name\":\"onOracleFunctionResponse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"runId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"functionName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"functionArguments\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"created\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"model\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"systemFingerprint\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"object\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"completionTokens\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"promptTokens\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"totalTokens\",\"type\":\"uint32\"}],\"internalType\":\"struct IOracle.OpenAiResponse\",\"name\":\"response\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"}],\"name\":\"onOracleOpenAiLlmResponse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOracleAddress\",\"type\":\"address\"}],\"name\":\"setOracleAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"startChat\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PrevOpenAiChatGpt.sol\":\"PrevOpenAiChatGpt\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/PrevOpenAiChatGpt.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\n// Uncomment this line to use console.log\\n// import \\\"hardhat/console.sol\\\";\\nimport \\\"./interfaces/IOracle.sol\\\";\\n\\n// @title PrevOpenAiChatGpt\\n// @notice This contract interacts with teeML oracle to handle chat interactions using the OpenAI model.\\ncontract PrevOpenAiChatGpt {\\n\\n    struct Message {\\n        string role;\\n        string content;\\n    }\\n\\n    struct ChatRun {\\n        address owner;\\n        Message[] messages;\\n        uint messagesCount;\\n    }\\n\\n    // @notice Mapping from chat ID to ChatRun\\n    mapping(uint => ChatRun) public chatRuns;\\n    uint private chatRunsCount;\\n\\n    // @notice Event emitted when a new chat is created\\n    event ChatCreated(address indexed owner, uint indexed chatId);\\n\\n    // @notice Address of the contract owner\\n    address private owner;\\n\\n    // @notice Address of the oracle contract\\n    address public oracleAddress;\\n\\n    // @notice Event emitted when the oracle address is updated\\n    event OracleAddressUpdated(address indexed newOracleAddress);\\n\\n    // @notice Configuration for the OpenAI request\\n    IOracle.OpenAiRequest private config;\\n\\n    // @param initialOracleAddress Initial address of the oracle contract\\n    constructor(address initialOracleAddress) {\\n        owner = msg.sender;\\n        oracleAddress = initialOracleAddress;\\n        chatRunsCount = 0;\\n\\n        config = IOracle.OpenAiRequest({\\n            model : \\\"gpt-4-turbo-preview\\\",\\n            frequencyPenalty : 21, // > 20 for null\\n            logitBias : \\\"\\\", // empty str for null\\n            maxTokens : 1000, // 0 for null\\n            presencePenalty : 21, // > 20 for null\\n            responseFormat : \\\"{\\\\\\\"type\\\\\\\":\\\\\\\"text\\\\\\\"}\\\",\\n            seed : 0, // null\\n            stop : \\\"\\\", // null\\n            temperature : 10, // Example temperature (scaled up, 10 means 1.0), > 20 means null\\n            topP : 101, // Percentage 0-100, > 100 means null\\n            tools : \\\"[{\\\\\\\"type\\\\\\\":\\\\\\\"function\\\\\\\",\\\\\\\"function\\\\\\\":{\\\\\\\"name\\\\\\\":\\\\\\\"web_search\\\\\\\",\\\\\\\"description\\\\\\\":\\\\\\\"Search the internet\\\\\\\",\\\\\\\"parameters\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"object\\\\\\\",\\\\\\\"properties\\\\\\\":{\\\\\\\"query\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"string\\\\\\\",\\\\\\\"description\\\\\\\":\\\\\\\"Search query\\\\\\\"}},\\\\\\\"required\\\\\\\":[\\\\\\\"query\\\\\\\"]}}},{\\\\\\\"type\\\\\\\":\\\\\\\"function\\\\\\\",\\\\\\\"function\\\\\\\":{\\\\\\\"name\\\\\\\":\\\\\\\"code_interpreter\\\\\\\",\\\\\\\"description\\\\\\\":\\\\\\\"Evaluates python code in a sandbox environment. The environment resets on every execution. You must send the whole script every time and print your outputs. Script should be pure python code that can be evaluated. It should be in python format NOT markdown. The code should NOT be wrapped in backticks. All python packages including requests, matplotlib, scipy, numpy, pandas, etc are available. Output can only be read from stdout, and stdin. Do not use things like plot.show() as it will not work. print() any output and results so you can capture the output.\\\\\\\",\\\\\\\"parameters\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"object\\\\\\\",\\\\\\\"properties\\\\\\\":{\\\\\\\"code\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"string\\\\\\\",\\\\\\\"description\\\\\\\":\\\\\\\"The pure python script to be evaluated. The contents will be in main.py. It should not be in markdown format.\\\\\\\"}},\\\\\\\"required\\\\\\\":[\\\\\\\"code\\\\\\\"]}}}]\\\",\\n            toolChoice : \\\"auto\\\", // \\\"none\\\" or \\\"auto\\\"\\n            user : \\\"\\\" // null\\n        });\\n    }\\n\\n    // @notice Ensures the caller is the contract owner\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Caller is not owner\\\");\\n        _;\\n    }\\n\\n    // @notice Ensures the caller is the oracle contract\\n    modifier onlyOracle() {\\n        require(msg.sender == oracleAddress, \\\"Caller is not oracle\\\");\\n        _;\\n    }\\n\\n    // @notice Updates the oracle address\\n    // @param newOracleAddress The new oracle address to set\\n    function setOracleAddress(address newOracleAddress) public onlyOwner {\\n        oracleAddress = newOracleAddress;\\n        emit OracleAddressUpdated(newOracleAddress);\\n    }\\n\\n    // @notice Starts a new chat\\n    // @param message The initial message to start the chat with\\n    // @return The ID of the newly created chat\\n    function startChat(string memory message) public returns (uint) {\\n        ChatRun storage run = chatRuns[chatRunsCount];\\n\\n        run.owner = msg.sender;\\n        Message memory newMessage = Message({\\n            role: \\\"user\\\",\\n            content: message\\n        });\\n        run.messages.push(newMessage);\\n        run.messagesCount = 1;\\n\\n        uint currentId = chatRunsCount;\\n        chatRunsCount = chatRunsCount + 1;\\n\\n        IOracle(oracleAddress).createOpenAiLlmCall(currentId, config);\\n        emit ChatCreated(msg.sender, currentId);\\n\\n        return currentId;\\n    }\\n\\n    // @notice Handles the response from the oracle for an OpenAI LLM call\\n    // @param runId The ID of the chat run\\n    // @param response The response from the oracle\\n    // @param errorMessage Any error message\\n    // @dev Called by teeML oracle\\n    function onOracleOpenAiLlmResponse(\\n        uint runId,\\n        IOracle.OpenAiResponse memory response,\\n        string memory errorMessage\\n    ) public onlyOracle {\\n        ChatRun storage run = chatRuns[runId];\\n        require(\\n            compareStrings(run.messages[run.messagesCount - 1].role, \\\"user\\\"),\\n            \\\"No message to respond to\\\"\\n        );\\n\\n        if (!compareStrings(errorMessage, \\\"\\\")) {\\n            Message memory newMessage = Message({\\n                role: \\\"assistant\\\",\\n                content: errorMessage\\n            });\\n            run.messages.push(newMessage);\\n            run.messagesCount++;\\n        } else {\\n            if (compareStrings(response.content, \\\"\\\")) {\\n                IOracle(oracleAddress).createFunctionCall(runId, response.functionName, response.functionArguments);\\n            } else {\\n                Message memory newMessage = Message({\\n                    role: \\\"assistant\\\",\\n                    content: response.content\\n                });\\n                run.messages.push(newMessage);\\n                run.messagesCount++;\\n            }\\n        }\\n    }\\n\\n    // @notice Handles the response from the oracle for a function call\\n    // @param runId The ID of the chat run\\n    // @param response The response from the oracle\\n    // @param errorMessage Any error message\\n    // @dev Called by teeML oracle\\n    function onOracleFunctionResponse(\\n        uint runId,\\n        string memory response,\\n        string memory errorMessage\\n    ) public onlyOracle {\\n        ChatRun storage run = chatRuns[runId];\\n        require(\\n            compareStrings(run.messages[run.messagesCount - 1].role, \\\"user\\\"),\\n            \\\"No function to respond to\\\"\\n        );\\n        if (compareStrings(errorMessage, \\\"\\\")) {\\n            Message memory newMessage = Message({\\n                role: \\\"user\\\",\\n                content: response\\n            });\\n            run.messages.push(newMessage);\\n            run.messagesCount++;\\n            IOracle(oracleAddress).createOpenAiLlmCall(runId, config);\\n        }\\n    }\\n\\n    // @notice Adds a new message to an existing chat run\\n    // @param message The new message to add\\n    // @param runId The ID of the chat run\\n    function addMessage(string memory message, uint runId) public onlyOwner {\\n        ChatRun storage run = chatRuns[runId];\\n        require(\\n            compareStrings(run.messages[run.messagesCount - 1].role, \\\"assistant\\\"),\\n            \\\"No response to previous message\\\"\\n        );\\n        // require(\\n        //     run.owner == msg.sender, \\\"Only chat owner can add messages\\\"\\n        // );\\n\\n        Message memory newMessage = Message({\\n            role: \\\"user\\\",\\n            content: message\\n        });\\n        run.messages.push(newMessage);\\n        run.messagesCount++;\\n\\n        IOracle(oracleAddress).createOpenAiLlmCall(runId, config);\\n    }\\n\\n    // @notice Retrieves the message contents of a chat run\\n    // @param chatId The ID of the chat run\\n    // @return An array of message contents\\n    function getMessageHistoryContents(uint chatId) public view returns (string[] memory) {\\n        ChatRun storage run = chatRuns[chatId];\\n        string[] memory contents = new string[](run.messagesCount);\\n        for (uint i = 0; i < run.messagesCount; i++) {\\n            contents[i] = run.messages[i].content;\\n        }\\n        return contents;\\n    }\\n\\n    // @notice Retrieves the message roles of a chat run\\n    // @param chatId The ID of the chat run\\n    // @return An array of message roles\\n    function getMessageHistoryRoles(uint chatId) public view returns (string[] memory) {\\n        ChatRun storage run = chatRuns[chatId];\\n        string[] memory roles = new string[](run.messagesCount);\\n        for (uint i = 0; i < run.messagesCount; i++) {\\n            roles[i] = run.messages[i].role;\\n        }\\n        return roles;\\n    }\\n\\n    // @notice Compares two strings for equality\\n    // @param a The first string\\n    // @param b The second string\\n    // @return True if the strings are equal, false otherwise\\n    function compareStrings(string memory a, string memory b) private pure returns (bool) {\\n        return (keccak256(abi.encodePacked((a))) == keccak256(abi.encodePacked((b))));\\n    }\\n}\\n\",\"keccak256\":\"0x79aeaf7c7e6fc144ba2bf2b3b9afa110ceabe61f38ac534c4dfe02b91a083c1c\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.13;\\n\\ninterface IOracle {\\n\\n    struct Content {\\n        string contentType;\\n        string value;\\n    }\\n\\n    struct Message {\\n        string role;\\n        Content [] content;\\n    }\\n\\n    struct OpenAiRequest {\\n        // \\\"gpt-4-turbo\\\", \\\"gpt-4-turbo-preview\\\" or \\\"gpt-3.5-turbo-1106\\\"\\n        string model;\\n        // int -20 - 20, Mapped to float -2.0 - 2.0. If bigger than 20 then null\\n        int8 frequencyPenalty;\\n        // JSON string or empty string\\n        string logitBias;\\n        // 0 for null\\n        uint32 maxTokens;\\n        // int -20 - 20, Mapped to float -2.0 - 2.0. If bigger than 20 then null\\n        int8 presencePenalty;\\n        // JSON string or empty string\\n        string responseFormat;\\n        // 0 for null\\n        uint seed;\\n        // empty str for null\\n        string stop;\\n        // 0-20, > 20 for null\\n        uint temperature;\\n        // 0-100  percentage, > 100 for null\\n        uint topP;\\n        // JSON list for tools in OpenAI format, empty for null, names have to match the supported tools\\n        string tools;\\n        // \\\"none\\\", \\\"auto\\\" or empty str which defaults to auto on OpenAI side\\n        string toolChoice;\\n        string user;\\n    }\\n\\n    struct OpenAiResponse {\\n        string id;\\n\\n        // either content is an empty str or functionName and functionArguments\\n        string content;\\n        string functionName;\\n        string functionArguments;\\n\\n        uint64 created;\\n        string model;\\n        string systemFingerprint;\\n        // kind of pointless since its always \\\"chat.completion\\\"?\\n        string object;\\n\\n        uint32 completionTokens;\\n        uint32 promptTokens;\\n        uint32 totalTokens;\\n    }\\n\\n    struct GroqRequest {\\n        // \\\"llama3-8b-8192\\\", \\\"llama3-70b-8192\\\", \\\"mixtral-8x7b-32768\\\" or \\\"gemma-7b-it\\\"\\n        string model;\\n        // int -20 - 20, Mapped to float -2.0 - 2.0. If bigger than 20 then null\\n        int8 frequencyPenalty;\\n        // JSON string or empty string\\n        string logitBias;\\n        // 0 for null\\n        uint32 maxTokens;\\n        // int -20 - 20, Mapped to float -2.0 - 2.0. If bigger than 20 then null\\n        int8 presencePenalty;\\n        // JSON string or empty string\\n        string responseFormat;\\n        // 0 for null\\n        uint seed;\\n        // empty str for null\\n        string stop;\\n        // 0-20, > 20 for null\\n        uint temperature;\\n        // 0-100  percentage, > 100 for null\\n        uint topP;\\n        string user;\\n    }\\n\\n    struct GroqResponse {\\n        string id;\\n\\n        string content;\\n\\n        uint64 created;\\n        string model;\\n        string systemFingerprint;\\n        // kind of pointless since its always \\\"chat.completion\\\"?\\n        string object;\\n\\n        uint32 completionTokens;\\n        uint32 promptTokens;\\n        uint32 totalTokens;\\n    }\\n\\n    struct LlmRequest {\\n        // \\\"claude-3-5-sonnet-20240620\\\", \\\"claude-3-opus-20240229\\\", \\\"claude-3-sonnet-20240229\\\", \\\"claude-3-haiku-20240307\\\", \\\"claude-2.1\\\", \\\"claude-2.0\\\", \\\"claude-instant-1.2\\\"\\n        string model;\\n        // int -20 - 20, Mapped to float -2.0 - 2.0. If bigger than 20 then null\\n        int8 frequencyPenalty;\\n        // JSON string or empty string\\n        string logitBias;\\n        // 0 for null\\n        uint32 maxTokens;\\n        // int -20 - 20, Mapped to float -2.0 - 2.0. If bigger than 20 then null\\n        int8 presencePenalty;\\n        // JSON string or empty string\\n        string responseFormat;\\n        // 0 for null\\n        uint seed;\\n        // empty str for null\\n        string stop;\\n        // 0-20, > 20 for null\\n        uint temperature;\\n        // 0-100  percentage, > 100 for null\\n        uint topP;\\n        // JSON list for tools in OpenAI format, empty for null, names have to match the supported tools\\n        string tools;\\n        // \\\"none\\\", \\\"auto\\\" or empty str which defaults to auto on OpenAI side\\n        string toolChoice;\\n        string user;\\n    }\\n\\n    struct LlmResponse {\\n        string id;\\n\\n        // either content is an empty str or functionName and functionArguments\\n        string content;\\n        string functionName;\\n        string functionArguments;\\n\\n        uint64 created;\\n        string model;\\n        string systemFingerprint;\\n        // kind of pointless since its always \\\"chat.completion\\\"?\\n        string object;\\n\\n        uint32 completionTokens;\\n        uint32 promptTokens;\\n        uint32 totalTokens;\\n    }\\n\\n\\n    struct KnowledgeBaseQueryRequest {\\n        string cid;\\n        string query;\\n        uint32 num_documents;\\n    }\\n\\n    function createLlmCall(\\n        uint promptId\\n    ) external returns (uint);\\n\\n    function createLlmCall(\\n        uint promptId,\\n        LlmRequest memory request\\n    ) external returns (uint);\\n\\n    function createGroqLlmCall(\\n        uint promptId,\\n        GroqRequest memory request\\n    ) external returns (uint);\\n\\n    function createOpenAiLlmCall(\\n        uint promptId,\\n        OpenAiRequest memory request\\n    ) external returns (uint);\\n\\n    function createFunctionCall(\\n        uint functionCallbackId,\\n        string memory functionType,\\n        string memory functionInput\\n    ) external returns (uint i);\\n\\n    function createKnowledgeBaseQuery(\\n        uint kbQueryCallbackId,\\n        string memory cid,\\n        string memory query,\\n        uint32 num_documents\\n    ) external returns (uint i);\\n}\",\"keccak256\":\"0x1283962849594f93cf3b48d55414e6ede750fde3dd4e2775f2f6a774a3852296\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x6080346200112657601f6200289938819003918201601f19168301916001600160401b0383118484101762000b2f578084926020946040528339810103126200112657516001600160a01b03811690819003620011265760018060a01b031933816002541617600255600354161760035560006001556040516101a0810181811060018060401b0382111762000b2f576040526200009c6200112b565b601381527f6770742d342d747572626f2d70726576696577000000000000000000000000006020820152815260156020820152620000d96200114b565b6000815260408201526103e8606082015260156080820152620000fb6200112b565b600f81526e7b2274797065223a2274657874227d60881b602082015260a0820152600060c08201526200012d6200114b565b6000815260e0820152600a61010082015260656101208201526040516001600160401b0361046082019081119082111762000b2f57610460810160405261042a81527f5b7b2274797065223a2266756e6374696f6e222c2266756e6374696f6e223a7b60208201527f226e616d65223a227765625f736561726368222c226465736372697074696f6e60408201527f223a225365617263682074686520696e7465726e6574222c22706172616d657460608201527f657273223a7b2274797065223a226f626a656374222c2270726f70657274696560808201527f73223a7b227175657279223a7b2274797065223a22737472696e67222c22646560a08201527f736372697074696f6e223a22536561726368207175657279227d7d2c2272657160c08201527f7569726564223a5b227175657279225d7d7d7d2c7b2274797065223a2266756e60e08201527f6374696f6e222c2266756e6374696f6e223a7b226e616d65223a22636f64655f6101008201527f696e746572707265746572222c226465736372697074696f6e223a224576616c6101208201527f756174657320707974686f6e20636f646520696e20612073616e64626f7820656101408201527f6e7669726f6e6d656e742e2054686520656e7669726f6e6d656e7420726573656101608201527f7473206f6e20657665727920657865637574696f6e2e20596f75206d757374206101808201527f73656e64207468652077686f6c65207363726970742065766572792074696d656101a08201527f20616e64207072696e7420796f7572206f7574707574732e20536372697074206101c08201527f73686f756c64206265207075726520707974686f6e20636f64652074686174206101e08201527f63616e206265206576616c75617465642e2049742073686f756c6420626520696102008201527f6e20707974686f6e20666f726d6174204e4f54206d61726b646f776e2e2054686102208201527f6520636f64652073686f756c64204e4f54206265207772617070656420696e206102408201527f6261636b7469636b732e20416c6c20707974686f6e207061636b6167657320696102608201527f6e636c7564696e672072657175657374732c206d6174706c6f746c69622c20736102808201527f636970792c206e756d70792c2070616e6461732c2065746320617265206176616102a08201527f696c61626c652e204f75747075742063616e206f6e6c792062652072656164206102c08201527f66726f6d207374646f75742c20616e6420737464696e2e20446f206e6f7420756102e08201527f7365207468696e6773206c696b6520706c6f742e73686f7728292061732069746103008201527f2077696c6c206e6f7420776f726b2e207072696e74282920616e79206f7574706103208201527f757420616e6420726573756c747320736f20796f752063616e206361707475726103408201527f6520746865206f75747075742e222c22706172616d6574657273223a7b2274796103608201527f7065223a226f626a656374222c2270726f70657274696573223a7b22636f64656103808201527f223a7b2274797065223a22737472696e67222c226465736372697074696f6e226103a08201527f3a22546865207075726520707974686f6e2073637269707420746f20626520656103c08201527f76616c75617465642e2054686520636f6e74656e74732077696c6c20626520696103e08201527f6e206d61696e2e70792e2049742073686f756c64206e6f7420626520696e206d6104008201527f61726b646f776e20666f726d61742e227d7d2c227265717569726564223a5b2261042082015269636f6465225d7d7d7d5d60b01b610440820152610140820152620006936200112b565b60048152636175746f60e01b6020820152610160820152620006b46200114b565b6000815261018082015280518051906001600160401b03821162000b2f5760045490600182811c921680156200111b575b602083101462000b0e5781601f849311620010a9575b50602090601f83116001146200101a576000926200100e575b50508160011b916000199060031b1c1916176004555b602081015160ff19600554169060ff1617600555604081015180519060018060401b03821162000b2f5760065490600182811c9216801562001003575b602083101462000b0e5781601f84931162000fa2575b50602090601f831160011462000f245760009262000f18575b50508160011b916000199060031b1c1916176006555b63ffffffff60608201511660075490608083015160201b64ff00000000169164ffffffffff1916171760075560a081015180519060018060401b03821162000b2f5760085490600182811c9216801562000f0d575b602083101462000b0e5781601f84931162000eac575b50602090601f831160011462000e2e5760009262000e22575b50508160011b916000199060031b1c1916176008555b60c081015160095560e08101518051906001600160401b03821162000b2f57600a5490600182811c9216801562000e17575b602083101462000b0e5781601f84931162000db6575b50602090601f831160011462000d385760009262000d2c575b50508160011b916000199060031b1c191617600a555b610100810151600b55610120810151600c556101408101518051906001600160401b03821162000b2f57600d5490600182811c9216801562000d21575b602083101462000b0e5781601f84931162000cbd575b50602090601f831160011462000c3f5760009262000c33575b50508160011b916000199060031b1c191617600d555b610160810151805191906001600160401b03831162000b2f57600e54600181811c9116801562000c28575b602082101462000b0e57601f811162000bcf575b50602090601f841160011462000b515761018093916000918362000b45575b50508160011b916000199060031b1c191617600e555b015180516001600160401b03811162000b2f57600f54600181811c9116801562000b24575b602082101462000b0e57601f811162000aa4575b50602091601f821160011462000a3a5791819260009262000a2e575b50508160011b916000199060031b1c191617600f555b60405161168d90816200116c8239f35b01519050388062000a08565b601f19821692600f60005260206000209160005b85811062000a8b5750836001951062000a71575b505050811b01600f5562000a1e565b015160001960f88460031b161c1916905538808062000a62565b9192602060018192868501518155019401920162000a4e565b600f6000527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802601f830160051c8101916020841062000b03575b601f0160051c01905b81811062000af65750620009ec565b6000815560010162000ae7565b909150819062000ade565b634e487b7160e01b600052602260045260246000fd5b90607f1690620009d8565b634e487b7160e01b600052604160045260246000fd5b0151905038806200099d565b600e6000908152600080516020620027f9833981519152929190601f198616905b81811062000bb6575091600193918661018097941062000b9c575b505050811b01600e55620009b3565b015160001960f88460031b161c1916905538808062000b8d565b9293602060018192878601518155019501930162000b72565b600e600052600080516020620027f9833981519152601f850160051c8101916020861062000c1d575b601f0160051c01905b81811062000c1057506200097e565b6000815560010162000c01565b909150819062000bf8565b90607f16906200096a565b01519050388062000929565b600d600090815293506000805160206200283983398151915291905b601f198416851062000ca1576001945083601f1981161062000c87575b505050811b01600d556200093f565b015160001960f88460031b161c1916905538808062000c78565b8181015183556020948501946001909301929091019062000c5b565b600d60005290915060008051602062002839833981519152601f840160051c8101916020851062000d16575b90601f859493920160051c01905b81811062000d06575062000910565b6000815584935060010162000cf7565b909150819062000ce9565b91607f1691620008fa565b015190503880620008a7565b600a600090815293506000805160206200281983398151915291905b601f198416851062000d9a576001945083601f1981161062000d80575b505050811b01600a55620008bd565b015160001960f88460031b161c1916905538808062000d71565b8181015183556020948501946001909301929091019062000d54565b600a60005290915060008051602062002819833981519152601f840160051c81016020851062000e0f575b90849392915b601f830160051c8201811062000dff5750506200088e565b6000815585945060010162000de7565b508062000de1565b91607f169162000878565b01519050388062000830565b6008600090815293506000805160206200285983398151915291905b601f198416851062000e90576001945083601f1981161062000e76575b505050811b0160085562000846565b015160001960f88460031b161c1916905538808062000e67565b8181015183556020948501946001909301929091019062000e4a565b600860005290915060008051602062002859833981519152601f840160051c81016020851062000f05575b90849392915b601f830160051c8201811062000ef557505062000817565b6000815585945060010162000edd565b508062000ed7565b91607f169162000801565b01519050388062000796565b6006600090815293506000805160206200287983398151915291905b601f198416851062000f86576001945083601f1981161062000f6c575b505050811b01600655620007ac565b015160001960f88460031b161c1916905538808062000f5d565b8181015183556020948501946001909301929091019062000f40565b600660005290915060008051602062002879833981519152601f840160051c81016020851062000ffb575b90849392915b601f830160051c8201811062000feb5750506200077d565b6000815585945060010162000fd3565b508062000fcd565b91607f169162000767565b01519050388062000714565b6004600090815293507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b91905b601f19841685106200108d576001945083601f1981161062001073575b505050811b016004556200072a565b015160001960f88460031b161c1916905538808062001064565b8181015183556020948501946001909301929091019062001047565b60046000529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c81016020851062001113575b90849392915b601f830160051c8201811062001103575050620006fb565b60008155859450600101620010eb565b5080620010e5565b91607f1691620006e5565b600080fd5b60408051919082016001600160401b0381118382101762000b2f57604052565b60405190602082016001600160401b0381118382101762000b2f5760405256fe60406080815260048036101561001457600080fd5b600090813560e01c80632d08d82a146109395780634c69c00f146108cb5780634cecd88e14610520578063632cc98b146104e65780637397454d1461035e578063941fac37146101c3578063a89ae4ba1461019a578063eb17429a146101175763ed6e39e51461008357600080fd5b34610113576020366003190112610113573581528060205281812091600283015460016100af826115a4565b939401935b8181106100cc578251806100c88682610bb2565b0390f35b806100ec6100f36100e061010e9489610c76565b50865192838092610f43565b0382610adb565b6100fd82876115ee565b5261010881866115ee565b50611567565b6100b4565b5080fd5b50346101135760203660031901126101135735815280602052818120916002830154610142816115a4565b926001809501905b82811061015e578351806100c88782610bb2565b80866101806101706101959486610c76565b506100ec88518094819301610f43565b61018a82886115ee565b5261010881876115ee565b61014a565b82843461011357816003193601126101135760035490516001600160a01b039091168152602090f35b509134610113578060031936011261011357823567ffffffffffffffff811161035a576101f39036908501610afd565b906024359360018060a01b0361020e81600254163314610c14565b8585526020938585528386209060026001830192019182546000198101908111610347576100ec61025161024561025f9385610c76565b50895192838092610f43565b610259611542565b90611602565b156103045792889261029187969389966102bc99519161027e83610a8d565b610286610c56565b835288830152610ce2565b61029b8154611567565b90556003541690878551809781958294633c38a5f560e01b84528301610fd9565b03925af19081156102fb57506102d0578280f35b813d83116102f4575b6102e38183610adb565b810103126102f15781808280f35b80fd5b503d6102d9565b513d85823e3d90fd5b855162461bcd60e51b8152808601889052601f60248201527f4e6f20726573706f6e736520746f2070726576696f7573206d657373616765006044820152606490fd5b634e487b7160e01b895260118652602489fd5b8280fd5b50823461035a57606036600319011261035a5781359067ffffffffffffffff6024358181116104e2576103949036908601610afd565b906044359081116104e2576103ac9036908601610afd565b9260018060a01b03946103c4866003541633146114ff565b81875260209587875284882095600260018801970190815460001981019081116104cf576100ec6104076103fb61040f938c610c76565b508a5192838092610f43565b610259610c56565b1561048c57865161042b9161042382610abf565b8b8252611602565b610433578880f35b61029188956104489888519161027e83610a8d565b03925af19081156102fb5750610463575b8080808080808880f35b813d8311610485575b6104768183610adb565b810103126102f1578180610459565b503d61046c565b865162461bcd60e51b81528085018a9052601960248201527f4e6f2066756e6374696f6e20746f20726573706f6e6420746f000000000000006044820152606490fd5b634e487b7160e01b8b526011855260248bfd5b8580fd5b5082903461035a57602036600319011261035a579181923581528060205220600260018060a01b0382541691015482519182526020820152f35b5082903461035a576003196060368201126108c75767ffffffffffffffff9060248035919084358484116108c35761016090818486360301126108bf578751918201828110878211176108ad578852848701358681116108a95761058990883691880101610afd565b8252828501358681116108a9576105a590883691880101610afd565b9660209687840198895260448701358181116108a5576105ca908336918a0101610afd565b938a810194855260648801358281116108a1576105ec908436918b0101610afd565b97606082019889526084810135838116810361089d57608083015260a481013583811161089d5761062290853691840101610afd565b60a083015260c481013583811161089d5761064290853691840101610afd565b60c083015260e48101359083821161089d5761014461069e9161066d61014094883691840101610afd565b60e086015261067f6101048201610b59565b6101008601526106926101248201610b59565b61012086015201610b59565b910152604435908111610899576106b89036908301610afd565b9460018060a01b03966106d0886003541633146114ff565b838c528b89528a8c2097600260018a0199019a8b546000198101908111610887576100ec6104078f610705610711948f610c76565b50905192838092610f43565b1561084557908d949392916107338e5161072a81610abf565b8781528b611602565b610771575050505050505050506107629394519261075084610a8d565b610758611542565b8452830152610ce2565b61076c8154611567565b905580f35b909396999194979a9c9b9295985061079881518d519061079082610abf565b8a8252611602565b156108275750505089969492606099989694926107de6107ed936003541697519151918b519c8d9a8b998a98634b04236b60e01b8a528901528701526064860190610b8d565b91848303016044850152610b8d565b03925af19081156102fb575061080257505080f35b813d8311610820575b6108158183610adb565b810103126102f15780f35b503d61080b565b96509750999750505050506107629491505190519261075084610a8d565b8c5162461bcd60e51b81528086018c90526018818a01527f4e6f206d65737361676520746f20726573706f6e6420746f00000000000000006044820152606490fd5b634e487b7160e01b8f5260118652888ffd5b8a80fd5b8d80fd5b8c80fd5b8b80fd5b8980fd5b634e487b7160e01b8a5260418852838afd5b8880fd5b8780fd5b8380fd5b503461011357602036600319011261011357356001600160a01b038181169182900361035a5761090090600254163314610c14565b600380546001600160a01b031916821790557f107a9fafffb7ac890f780879e423760c9ffea8dcee8045681f40f542aede2cb88280a280f35b509134610113576020928360031936011261035a57803567ffffffffffffffff81116108c757906109706002939236908301610afd565b6001938491825487528688526109bc85882091336bffffffffffffffffffffffff60a01b8454161783558651906109a682610a8d565b6109ae610c56565b82528a820152848301610ce2565b015582549280840190818511610a7a57556003548251633c38a5f560e01b815291869183916001600160a01b0390911690829088908290610a00908a908301610fd9565b03925af18015610a70578392918691610a41575b505051927fd1de2c4de50323207202f3df0bb1dec1a42e233aec245f25519d674c10bd72ca339180a38152f35b90809293503d8311610a69575b610a588183610adb565b8101031261035a5781908438610a14565b503d610a4e565b82513d86823e3d90fd5b634e487b7160e01b865260118352602486fd5b6040810190811067ffffffffffffffff821117610aa957604052565b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff821117610aa957604052565b90601f8019910116810190811067ffffffffffffffff821117610aa957604052565b81601f82011215610b545780359067ffffffffffffffff8211610aa95760405192610b32601f8401601f191660200185610adb565b82845260208383010111610b5457816000926020809301838601378301015290565b600080fd5b359063ffffffff82168203610b5457565b60005b838110610b7d5750506000910152565b8181015183820152602001610b6d565b90602091610ba681518092818552858086019101610b6a565b601f01601f1916010190565b602080820190808352835180925260408301928160408460051b8301019501936000915b848310610be65750505050505090565b9091929394958480610c04600193603f198682030187528a51610b8d565b9801930193019194939290610bd6565b15610c1b57565b60405162461bcd60e51b815260206004820152601360248201527221b0b63632b91034b9903737ba1037bbb732b960691b6044820152606490fd5b60405190610c6382610a8d565b60048252633ab9b2b960e11b6020830152565b8054821015610c925760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015610cd8575b6020831014610cc257565b634e487b7160e01b600052602260045260246000fd5b91607f1691610cb7565b805468010000000000000000811015610aa957610d06906001928382018155610c76565b610f2d57825180519167ffffffffffffffff92838111610aa9578490610d2c8354610ca8565b93601f94858111610edc575b50602090858311600114610e7357602094929160009183610e68575b5050600019600383901b1c191690831b1781555b019401518051928311610aa957610d7f8554610ca8565b828111610e20575b506020918311600114610dc057928293918392600094610db5575b50501b916000199060031b1c1916179055565b015192503880610da2565b90601f198316918560005283826000209360005b87828210610e0757505010610dee575b505050811b019055565b015160001960f88460031b161c19169055388080610de4565b8486015187559095019460209485019487935001610dd4565b8560005260206000208380860160051c82019260208710610e5f575b0160051c019085905b828110610e53575050610d87565b60008155018590610e45565b92508192610e3c565b015190503880610d54565b90601f1983169185600052816000209260005b818110610ec457509185939185602098969410610eab575b505050811b018155610d68565b015160001960f88460031b161c19169055388080610e9e565b8284015185558a969094019360209384019301610e86565b909192506000848152602081208680860160051c82019360208710610f24575b908a9695949392910160051c01915b828110610f19575050610d38565b818155899501610f0b565b93508193610efc565b634e487b7160e01b600052600060045260246000fd5b9060009291805491610f5483610ca8565b918282526001938481169081600014610fb65750600114610f76575b50505050565b90919394506000526020928360002092846000945b838610610fa2575050505001019038808080610f70565b805485870183015294019385908201610f8b565b9294505050602093945060ff191683830152151560051b01019038808080610f70565b90815260206040818301526101a0806040840152600060045493610ffc85610ca8565b806101e083015260019586811690816000146114e05750600114611482575b50600592835460000b6060830152603f1990818385030160808401526000936006549061104782610ca8565b91828252888a8216918260001461146457505060011461140a575b505060075463ffffffff811660a0850152861c60000b60c0840152818385030160e08401526000936008549061109782610ca8565b91828252888a821691826000146113ec575050600114611392575b50506009546101008401528284038201610120840152600a546000946110d782610ca8565b91828252888a8216918260001461137457505060011461131a575b5050600b54610140840152600c546101608401528284038201610180840152600d5460009461112082610ca8565b91828252888a821691826000146112fc5750506001146112a2575b5050828403820190830152600e5460009361115582610ca8565b91828252878982169182600014611282575050600114611224575b50506101c09082840301910152600093600f5461118c81610ca8565b808452938183169182156112055750506001146111ab575b5050505090565b92935090600f6000527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80292846000945b8386106111f157505050500101388080806111a4565b8054858701830152940193859082016111db565b925093929495505060ff1916848401521515901b0101388080806111a4565b8691929450600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd90886000925b85841061126c57505001019290506101c038611170565b80548385018601528994909301928a9101611255565b60ff191683820152921515871b90910190910193506101c0905038611170565b87929550600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb591896000935b8285106112e657505050010192388061113b565b80548585018701528a95909401938b91016112d2565b60ff191683820152921515881b90910190910194503890508061113b565b87929550600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a891896000935b82851061135e5750505001019238806110f2565b80548585018701528a95909401938b910161134a565b60ff191683820152921515881b9091019091019450389050806110f2565b8792955060086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee391896000935b8285106113d65750505001019238806110b2565b80548585018701528a95909401938b91016113c2565b60ff191683820152921515881b9091019091019450389050806110b2565b8792955060066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f91896000935b82851061144e575050500101923880611062565b80548585018701528a95909401938b910161143a565b60ff191683820152921515881b909101909101945038905080611062565b90915060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b84866000925b8484106114ca575050506102009150820101903861101b565b80546102008588010152019101908686916114b1565b929350506102009160ff191682840152151560051b820101903861101b565b1561150657565b60405162461bcd60e51b815260206004820152601460248201527343616c6c6572206973206e6f74206f7261636c6560601b6044820152606490fd5b6040519061154f82610a8d565b6009825268185cdcda5cdd185b9d60ba1b6020830152565b60001981146115765760010190565b634e487b7160e01b600052601160045260246000fd5b67ffffffffffffffff8111610aa95760051b60200190565b906115ae8261158c565b6115bb6040519182610adb565b82815280926115cc601f199161158c565b019060005b8281106115dd57505050565b8060606020809385010152016115d1565b8051821015610c925760209160051b010190565b90604051916020926116308482816116238183019687815193849201610b6a565b8101038084520182610adb565b519020916116506040519182816116238183019687815193849201610b6a565b519020149056fea2646970667358221220d9eee9e916c9fefd772f24adeaa1eacba3042a4c9b04a11fa293a3531b1357fc64736f6c63430008110033bb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fdc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8d7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5f3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3f652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f",
  "deployedBytecode": "0x60406080815260048036101561001457600080fd5b600090813560e01c80632d08d82a146109395780634c69c00f146108cb5780634cecd88e14610520578063632cc98b146104e65780637397454d1461035e578063941fac37146101c3578063a89ae4ba1461019a578063eb17429a146101175763ed6e39e51461008357600080fd5b34610113576020366003190112610113573581528060205281812091600283015460016100af826115a4565b939401935b8181106100cc578251806100c88682610bb2565b0390f35b806100ec6100f36100e061010e9489610c76565b50865192838092610f43565b0382610adb565b6100fd82876115ee565b5261010881866115ee565b50611567565b6100b4565b5080fd5b50346101135760203660031901126101135735815280602052818120916002830154610142816115a4565b926001809501905b82811061015e578351806100c88782610bb2565b80866101806101706101959486610c76565b506100ec88518094819301610f43565b61018a82886115ee565b5261010881876115ee565b61014a565b82843461011357816003193601126101135760035490516001600160a01b039091168152602090f35b509134610113578060031936011261011357823567ffffffffffffffff811161035a576101f39036908501610afd565b906024359360018060a01b0361020e81600254163314610c14565b8585526020938585528386209060026001830192019182546000198101908111610347576100ec61025161024561025f9385610c76565b50895192838092610f43565b610259611542565b90611602565b156103045792889261029187969389966102bc99519161027e83610a8d565b610286610c56565b835288830152610ce2565b61029b8154611567565b90556003541690878551809781958294633c38a5f560e01b84528301610fd9565b03925af19081156102fb57506102d0578280f35b813d83116102f4575b6102e38183610adb565b810103126102f15781808280f35b80fd5b503d6102d9565b513d85823e3d90fd5b855162461bcd60e51b8152808601889052601f60248201527f4e6f20726573706f6e736520746f2070726576696f7573206d657373616765006044820152606490fd5b634e487b7160e01b895260118652602489fd5b8280fd5b50823461035a57606036600319011261035a5781359067ffffffffffffffff6024358181116104e2576103949036908601610afd565b906044359081116104e2576103ac9036908601610afd565b9260018060a01b03946103c4866003541633146114ff565b81875260209587875284882095600260018801970190815460001981019081116104cf576100ec6104076103fb61040f938c610c76565b508a5192838092610f43565b610259610c56565b1561048c57865161042b9161042382610abf565b8b8252611602565b610433578880f35b61029188956104489888519161027e83610a8d565b03925af19081156102fb5750610463575b8080808080808880f35b813d8311610485575b6104768183610adb565b810103126102f1578180610459565b503d61046c565b865162461bcd60e51b81528085018a9052601960248201527f4e6f2066756e6374696f6e20746f20726573706f6e6420746f000000000000006044820152606490fd5b634e487b7160e01b8b526011855260248bfd5b8580fd5b5082903461035a57602036600319011261035a579181923581528060205220600260018060a01b0382541691015482519182526020820152f35b5082903461035a576003196060368201126108c75767ffffffffffffffff9060248035919084358484116108c35761016090818486360301126108bf578751918201828110878211176108ad578852848701358681116108a95761058990883691880101610afd565b8252828501358681116108a9576105a590883691880101610afd565b9660209687840198895260448701358181116108a5576105ca908336918a0101610afd565b938a810194855260648801358281116108a1576105ec908436918b0101610afd565b97606082019889526084810135838116810361089d57608083015260a481013583811161089d5761062290853691840101610afd565b60a083015260c481013583811161089d5761064290853691840101610afd565b60c083015260e48101359083821161089d5761014461069e9161066d61014094883691840101610afd565b60e086015261067f6101048201610b59565b6101008601526106926101248201610b59565b61012086015201610b59565b910152604435908111610899576106b89036908301610afd565b9460018060a01b03966106d0886003541633146114ff565b838c528b89528a8c2097600260018a0199019a8b546000198101908111610887576100ec6104078f610705610711948f610c76565b50905192838092610f43565b1561084557908d949392916107338e5161072a81610abf565b8781528b611602565b610771575050505050505050506107629394519261075084610a8d565b610758611542565b8452830152610ce2565b61076c8154611567565b905580f35b909396999194979a9c9b9295985061079881518d519061079082610abf565b8a8252611602565b156108275750505089969492606099989694926107de6107ed936003541697519151918b519c8d9a8b998a98634b04236b60e01b8a528901528701526064860190610b8d565b91848303016044850152610b8d565b03925af19081156102fb575061080257505080f35b813d8311610820575b6108158183610adb565b810103126102f15780f35b503d61080b565b96509750999750505050506107629491505190519261075084610a8d565b8c5162461bcd60e51b81528086018c90526018818a01527f4e6f206d65737361676520746f20726573706f6e6420746f00000000000000006044820152606490fd5b634e487b7160e01b8f5260118652888ffd5b8a80fd5b8d80fd5b8c80fd5b8b80fd5b8980fd5b634e487b7160e01b8a5260418852838afd5b8880fd5b8780fd5b8380fd5b503461011357602036600319011261011357356001600160a01b038181169182900361035a5761090090600254163314610c14565b600380546001600160a01b031916821790557f107a9fafffb7ac890f780879e423760c9ffea8dcee8045681f40f542aede2cb88280a280f35b509134610113576020928360031936011261035a57803567ffffffffffffffff81116108c757906109706002939236908301610afd565b6001938491825487528688526109bc85882091336bffffffffffffffffffffffff60a01b8454161783558651906109a682610a8d565b6109ae610c56565b82528a820152848301610ce2565b015582549280840190818511610a7a57556003548251633c38a5f560e01b815291869183916001600160a01b0390911690829088908290610a00908a908301610fd9565b03925af18015610a70578392918691610a41575b505051927fd1de2c4de50323207202f3df0bb1dec1a42e233aec245f25519d674c10bd72ca339180a38152f35b90809293503d8311610a69575b610a588183610adb565b8101031261035a5781908438610a14565b503d610a4e565b82513d86823e3d90fd5b634e487b7160e01b865260118352602486fd5b6040810190811067ffffffffffffffff821117610aa957604052565b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff821117610aa957604052565b90601f8019910116810190811067ffffffffffffffff821117610aa957604052565b81601f82011215610b545780359067ffffffffffffffff8211610aa95760405192610b32601f8401601f191660200185610adb565b82845260208383010111610b5457816000926020809301838601378301015290565b600080fd5b359063ffffffff82168203610b5457565b60005b838110610b7d5750506000910152565b8181015183820152602001610b6d565b90602091610ba681518092818552858086019101610b6a565b601f01601f1916010190565b602080820190808352835180925260408301928160408460051b8301019501936000915b848310610be65750505050505090565b9091929394958480610c04600193603f198682030187528a51610b8d565b9801930193019194939290610bd6565b15610c1b57565b60405162461bcd60e51b815260206004820152601360248201527221b0b63632b91034b9903737ba1037bbb732b960691b6044820152606490fd5b60405190610c6382610a8d565b60048252633ab9b2b960e11b6020830152565b8054821015610c925760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015610cd8575b6020831014610cc257565b634e487b7160e01b600052602260045260246000fd5b91607f1691610cb7565b805468010000000000000000811015610aa957610d06906001928382018155610c76565b610f2d57825180519167ffffffffffffffff92838111610aa9578490610d2c8354610ca8565b93601f94858111610edc575b50602090858311600114610e7357602094929160009183610e68575b5050600019600383901b1c191690831b1781555b019401518051928311610aa957610d7f8554610ca8565b828111610e20575b506020918311600114610dc057928293918392600094610db5575b50501b916000199060031b1c1916179055565b015192503880610da2565b90601f198316918560005283826000209360005b87828210610e0757505010610dee575b505050811b019055565b015160001960f88460031b161c19169055388080610de4565b8486015187559095019460209485019487935001610dd4565b8560005260206000208380860160051c82019260208710610e5f575b0160051c019085905b828110610e53575050610d87565b60008155018590610e45565b92508192610e3c565b015190503880610d54565b90601f1983169185600052816000209260005b818110610ec457509185939185602098969410610eab575b505050811b018155610d68565b015160001960f88460031b161c19169055388080610e9e565b8284015185558a969094019360209384019301610e86565b909192506000848152602081208680860160051c82019360208710610f24575b908a9695949392910160051c01915b828110610f19575050610d38565b818155899501610f0b565b93508193610efc565b634e487b7160e01b600052600060045260246000fd5b9060009291805491610f5483610ca8565b918282526001938481169081600014610fb65750600114610f76575b50505050565b90919394506000526020928360002092846000945b838610610fa2575050505001019038808080610f70565b805485870183015294019385908201610f8b565b9294505050602093945060ff191683830152151560051b01019038808080610f70565b90815260206040818301526101a0806040840152600060045493610ffc85610ca8565b806101e083015260019586811690816000146114e05750600114611482575b50600592835460000b6060830152603f1990818385030160808401526000936006549061104782610ca8565b91828252888a8216918260001461146457505060011461140a575b505060075463ffffffff811660a0850152861c60000b60c0840152818385030160e08401526000936008549061109782610ca8565b91828252888a821691826000146113ec575050600114611392575b50506009546101008401528284038201610120840152600a546000946110d782610ca8565b91828252888a8216918260001461137457505060011461131a575b5050600b54610140840152600c546101608401528284038201610180840152600d5460009461112082610ca8565b91828252888a821691826000146112fc5750506001146112a2575b5050828403820190830152600e5460009361115582610ca8565b91828252878982169182600014611282575050600114611224575b50506101c09082840301910152600093600f5461118c81610ca8565b808452938183169182156112055750506001146111ab575b5050505090565b92935090600f6000527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80292846000945b8386106111f157505050500101388080806111a4565b8054858701830152940193859082016111db565b925093929495505060ff1916848401521515901b0101388080806111a4565b8691929450600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd90886000925b85841061126c57505001019290506101c038611170565b80548385018601528994909301928a9101611255565b60ff191683820152921515871b90910190910193506101c0905038611170565b87929550600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb591896000935b8285106112e657505050010192388061113b565b80548585018701528a95909401938b91016112d2565b60ff191683820152921515881b90910190910194503890508061113b565b87929550600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a891896000935b82851061135e5750505001019238806110f2565b80548585018701528a95909401938b910161134a565b60ff191683820152921515881b9091019091019450389050806110f2565b8792955060086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee391896000935b8285106113d65750505001019238806110b2565b80548585018701528a95909401938b91016113c2565b60ff191683820152921515881b9091019091019450389050806110b2565b8792955060066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f91896000935b82851061144e575050500101923880611062565b80548585018701528a95909401938b910161143a565b60ff191683820152921515881b909101909101945038905080611062565b90915060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b84866000925b8484106114ca575050506102009150820101903861101b565b80546102008588010152019101908686916114b1565b929350506102009160ff191682840152151560051b820101903861101b565b1561150657565b60405162461bcd60e51b815260206004820152601460248201527343616c6c6572206973206e6f74206f7261636c6560601b6044820152606490fd5b6040519061154f82610a8d565b6009825268185cdcda5cdd185b9d60ba1b6020830152565b60001981146115765760010190565b634e487b7160e01b600052601160045260246000fd5b67ffffffffffffffff8111610aa95760051b60200190565b906115ae8261158c565b6115bb6040519182610adb565b82815280926115cc601f199161158c565b019060005b8281106115dd57505050565b8060606020809385010152016115d1565b8051821015610c925760209160051b010190565b90604051916020926116308482816116238183019687815193849201610b6a565b8101038084520182610adb565b519020916116506040519182816116238183019687815193849201610b6a565b519020149056fea2646970667358221220d9eee9e916c9fefd772f24adeaa1eacba3042a4c9b04a11fa293a3531b1357fc64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2565,
        "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
        "label": "chatRuns",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(ChatRun)2560_storage)"
      },
      {
        "astId": 2567,
        "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
        "label": "chatRunsCount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 2575,
        "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 2577,
        "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
        "label": "oracleAddress",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 2584,
        "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
        "label": "config",
        "offset": 0,
        "slot": "4",
        "type": "t_struct(OpenAiRequest)3743_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Message)2551_storage)dyn_storage": {
        "base": "t_struct(Message)2551_storage",
        "encoding": "dynamic_array",
        "label": "struct PrevOpenAiChatGpt.Message[]",
        "numberOfBytes": "32"
      },
      "t_int8": {
        "encoding": "inplace",
        "label": "int8",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_struct(ChatRun)2560_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PrevOpenAiChatGpt.ChatRun)",
        "numberOfBytes": "32",
        "value": "t_struct(ChatRun)2560_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(ChatRun)2560_storage": {
        "encoding": "inplace",
        "label": "struct PrevOpenAiChatGpt.ChatRun",
        "members": [
          {
            "astId": 2553,
            "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 2557,
            "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
            "label": "messages",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_struct(Message)2551_storage)dyn_storage"
          },
          {
            "astId": 2559,
            "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
            "label": "messagesCount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Message)2551_storage": {
        "encoding": "inplace",
        "label": "struct PrevOpenAiChatGpt.Message",
        "members": [
          {
            "astId": 2548,
            "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
            "label": "role",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 2550,
            "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
            "label": "content",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(OpenAiRequest)3743_storage": {
        "encoding": "inplace",
        "label": "struct IOracle.OpenAiRequest",
        "members": [
          {
            "astId": 3718,
            "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
            "label": "model",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 3720,
            "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
            "label": "frequencyPenalty",
            "offset": 0,
            "slot": "1",
            "type": "t_int8"
          },
          {
            "astId": 3722,
            "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
            "label": "logitBias",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 3724,
            "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
            "label": "maxTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_uint32"
          },
          {
            "astId": 3726,
            "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
            "label": "presencePenalty",
            "offset": 4,
            "slot": "3",
            "type": "t_int8"
          },
          {
            "astId": 3728,
            "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
            "label": "responseFormat",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 3730,
            "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
            "label": "seed",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 3732,
            "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
            "label": "stop",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          },
          {
            "astId": 3734,
            "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
            "label": "temperature",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 3736,
            "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
            "label": "topP",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 3738,
            "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
            "label": "tools",
            "offset": 0,
            "slot": "9",
            "type": "t_string_storage"
          },
          {
            "astId": 3740,
            "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
            "label": "toolChoice",
            "offset": 0,
            "slot": "10",
            "type": "t_string_storage"
          },
          {
            "astId": 3742,
            "contract": "contracts/PrevOpenAiChatGpt.sol:PrevOpenAiChatGpt",
            "label": "user",
            "offset": 0,
            "slot": "11",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}